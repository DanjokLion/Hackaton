"""'initial'

Revision ID: 66e24d3ba642
Revises: 
Create Date: 2024-06-09 23:49:27.582550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '66e24d3ba642'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('key_c', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('key_c')
    )
    op.create_table('dashboard_data',
    sa.Column('key_dash', sa.Integer(), nullable=False),
    sa.Column('total_patents', sa.Integer(), nullable=False),
    sa.Column('total_owners', sa.Integer(), nullable=False),
    sa.Column('category_stat', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('region_stat', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('key_dash')
    )
    op.create_table('entity',
    sa.Column('key_e', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('INN', sa.String(length=12), nullable=False),
    sa.Column('OGRN', sa.String(length=13), nullable=False),
    sa.Column('OGRNIP', sa.String(length=15), nullable=False),
    sa.Column('person_id', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('key_e')
    )
    op.create_table('patent',
    sa.Column('key_p', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('app_date', sa.Date(), nullable=False),
    sa.Column('public_date', sa.Date(), nullable=False),
    sa.Column('key_c', sa.Integer(), nullable=False),
    sa.Column('key_e', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['key_c'], ['category.key_c'], ),
    sa.ForeignKeyConstraint(['key_e'], ['entity.key_e'], ),
    sa.PrimaryKeyConstraint('key_p')
    )
    op.create_table('patent_owner',
    sa.Column('key_po', sa.Integer(), nullable=False),
    sa.Column('key_p', sa.Integer(), nullable=False),
    sa.Column('key_e', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['key_e'], ['entity.key_e'], ),
    sa.ForeignKeyConstraint(['key_p'], ['patent.key_p'], ),
    sa.PrimaryKeyConstraint('key_po')
    )
    op.create_table('patent_stat',
    sa.Column('key_s', sa.Integer(), nullable=False),
    sa.Column('key_p', sa.Integer(), nullable=False),
    sa.Column('total_patents', sa.Integer(), nullable=False),
    sa.Column('total_owners', sa.Integer(), nullable=False),
    sa.Column('owner_type_count', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['key_p'], ['patent.key_p'], ),
    sa.PrimaryKeyConstraint('key_s')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('patent_stat')
    op.drop_table('patent_owner')
    op.drop_table('patent')
    op.drop_table('entity')
    op.drop_table('dashboard_data')
    op.drop_table('category')
    # ### end Alembic commands ###
